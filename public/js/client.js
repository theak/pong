// Generated by CoffeeScript 1.3.3
var pongRound, socket;

console.log("cheesecakes");

socket = io.connect("/");

socket.on("message", function(data) {
  return console.log(data);
});

pongRound = new PongRound(new PongState(new Date().valueOf(), 0.5, 0, 0, 0, 1, 2, null));

window.onkeypress = function(event) {
  if (event.keyCode === 122) {
    return pongRound.addAction(new Swing(new Date().valueOf(), 0, "right", null));
  } else if (event.keyCode = 120) {
    return pongRound.addAction(new Swing(new Date().valueOf(), 1, "right", null));
  }
};

window.onload = function() {
  var court, renderingInterval;
  court = document.body.e("court", function() {
    this.style.position = "absolute";
    this.style.top = "0px";
    this.style.left = "0px";
    this.style.backgroundColor = "green";
    return this.ball = this.e("ball", function() {
      this.style.width = "10px";
      this.style.height = "10px";
      this.style.backgroundColor = "blue";
      this.style.position = "absolute";
      return this.style.borderRadius = "5px";
    });
  });
  return renderingInterval = setInterval(function() {
    var currentState, displayMultiplier, endTime, startTime;
    startTime = new Date().valueOf();
    currentState = pongRound.getStateAtTime(new Date().valueOf());
    displayMultiplier = 300;
    court.style.width = currentState.courtWidth * displayMultiplier + "px";
    court.style.height = currentState.courtLength * displayMultiplier + "px";
    court.ball.style.left = currentState.ballLocX * displayMultiplier + "px";
    court.ball.style.bottom = currentState.ballLocY * displayMultiplier + "px";
    if (currentState.winner != null) {
      alert("Player " + currentState.winner + " has won!");
      window.location.reload(false);
    }
    return endTime = new Date().valueOf();
  }, 10);
};

window.stop = function() {
  return clearInterval(renderingInterval);
};
