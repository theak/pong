// Generated by CoffeeScript 1.3.3
var Action, Ball, Extrapolate, Location, PongState, Speed,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Location = (function() {

  function Location(x, y) {
    this.x = x;
    this.y = y;
  }

  return Location;

})();

Speed = (function() {

  function Speed(x, y) {
    this.x = x;
    this.y = y;
  }

  return Speed;

})();

Ball = (function() {

  function Ball(location, speed) {
    this.location = location;
    this.speed = speed;
  }

  return Ball;

})();

PongState = (function() {

  function PongState(timestamp, ball) {
    this.timestamp = timestamp;
    this.ball = ball;
  }

  return PongState;

})();

Action = (function() {

  function Action(timestamp) {
    this.timestamp = timestamp;
  }

  Action.prototype.actOn = function(state) {};

  return Action;

})();

Extrapolate = (function(_super) {

  __extends(Extrapolate, _super);

  function Extrapolate() {
    return Extrapolate.__super__.constructor.apply(this, arguments);
  }

  Extrapolate.prototype.actOn = function(state) {
    var extrapolatedLocation, timeGap;
    timeGap = this.timestamp - state.timestamp;
    extrapolatedLocation = new Location(state.ball.location.x + (timeGap * state.ball.speed.x), state.ball.location.y + (timeGap * state.ball.speed.y));
    return new PongState(this.timestamp, new Ball(extrapolatedLocation, new Speed(state.ball.speed.x, state.ball.speed.y)));
  };

  return Extrapolate;

})(Action);
