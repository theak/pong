// Generated by CoffeeScript 1.6.2
var SwingMessage, SwingReceiver, Swinger, getTokenFromUrl, receiver, socket, swinger, token;

socket = io.connect("/");

swinger = null;

receiver = null;

getTokenFromUrl = function() {
  if (window.location.href.indexOf("#") === -1) {
    alert("please specify a token");
    return false;
  } else {
    return window.location.href.split("#")[1];
  }
};

SwingMessage = (function() {
  function SwingMessage(playerId, timestamp, token) {
    this.playerId = playerId;
    this.timestamp = timestamp;
    this.token = token;
  }

  return SwingMessage;

})();

token = getTokenFromUrl();

if (token) {
  socket.on("connect", function() {
    return socket.emit('token', token);
  });
  socket.on("message", function(data) {
    if (typeof data === "object" && data !== null) {
      return receiver.send(data);
    } else {
      return console.log(data);
    }
  });
  socket.on("playerId", function(id) {
    return swinger.playerId = id;
  });
}

Swinger = (function() {
  function Swinger(token) {
    this.token = token;
    swinger = this;
    socket.emit("newplayer", this.token);
    console.log("new swinger!");
  }

  Swinger.prototype.swing = function() {
    if (this.playerId != null) {
      return socket.emit("swing", new SwingMessage(this.playerId, new Date().getTime(), this.token));
    }
  };

  return Swinger;

})();

SwingReceiver = (function() {
  function SwingReceiver(callback) {
    this.callback = callback;
    receiver = this;
  }

  SwingReceiver.prototype.send = function(swing) {
    return this.callback(swing);
  };

  return SwingReceiver;

})();
