// Generated by CoffeeScript 1.3.3
var clientSocket;

clientSocket = (function() {
  var SwingMessage, playerId, socket, timeDelta, token;
  socket = io.connect("/");
  timeDelta = null;
  playerId = null;
  token = window.location.hash.slice(1);
  if (token.length === 0) {
    token = makeToken();
    window.location.hash = token;
  }
  SwingMessage = (function() {

    function SwingMessage(playerId, timestamp, token) {
      this.playerId = playerId;
      this.timestamp = timestamp;
      this.token = token;
    }

    return SwingMessage;

  })();
  socket.on("connect", function() {
    var requestTime;
    log("socket|on|connect");
    socket.emit('joinRoom', token);
    log("socket|emit|joinRoom|" + token);
    requestTime = new Date().getTime();
    socket.emit("getServerTime", function(serverTime) {
      var replyTime;
      log("socket|callback|getServerTime|" + serverTime);
      replyTime = new Date().getTime();
      return timeDelta = serverTime - (requestTime / 2) - (replyTime / 2);
    });
    return log("socket|emit|getServerTime");
  });
  socket.on("swing", function(swingMessage) {
    log("socket|on|swing|" + JSON.stringify(swingMessage));
    swingMessage.timestamp -= timeDelta;
    console.log(timeDelta);
    console.log("received delay " + (new Date().getTime() - swingMessage.timestamp));
    if (clientSocket.onswing != null) {
      return clientSocket.onswing(swingMessage);
    }
  });
  socket.on("message", function(data) {
    return log("socket|on|message|" + data.toString());
  });
  return {
    join: function() {
      socket.emit("newPlayer", token, function(id) {
        log("socket|callback|newPlayer|" + id);
        return playerId = id;
      });
      return log("socket|emit|newPlayer|" + token);
    },
    swing: function() {
      var swingMessage;
      if ((playerId != null) && (timeDelta != null)) {
        swingMessage = new SwingMessage(playerId, new Date().getTime());
        swingMessage.timestamp += timeDelta;
        socket.emit("swing", swingMessage);
        return log("socket|emit|swing|" + JSON.stringify(swingMessage));
      }
    },
    onswing: function() {},
    getToken: function() {
      return token;
    }
  };
})();
