// Generated by CoffeeScript 1.6.2
var DEFAULT_PUBLIC_FOLDER_PATH, DEFAULT_SERVER_PORT, fileServer, http, httpServer, io, nodeStatic, socketIO, tokenToPlayerSockets;

DEFAULT_PUBLIC_FOLDER_PATH = "./public";

DEFAULT_SERVER_PORT = 8000;

http = require("http");

nodeStatic = require("node-static");

socketIO = require("socket.io");

tokenToPlayerSockets = {};

fileServer = new nodeStatic.Server(DEFAULT_PUBLIC_FOLDER_PATH, {
  cache: false
});

httpServer = http.createServer(function(request, response) {
  request.addListener("data", function() {});
  return request.addListener("end", function() {
    return fileServer.serve(request, response);
  });
});

io = socketIO.listen(httpServer);

io.sockets.on('connection', function(socket) {
  socket.on('newplayer', function(token) {
    var _ref;

    console.log("new player");
    if ((_ref = tokenToPlayerSockets[token]) == null) {
      tokenToPlayerSockets[token] = [];
    }
    if (tokenToPlayerSockets[token].length >= 2) {
      return socket.emit('message', "too many players");
    } else {
      tokenToPlayerSockets[token].push(socket.id);
      socket.emit('playerId', tokenToPlayerSockets[token].length - 1);
      return socket.emit('message', "welcome, player " + tokenToPlayerSockets[token].length - 1);
    }
  });
  socket.on('swing', function(swing) {
    io.sockets["in"](swing.token).emit('message', swing);
    return console.log(swing);
  });
  return socket.on('token', function(token) {
    socket.emit('message', 'joining: ' + token);
    return socket.join(token);
  });
});

httpServer.listen(DEFAULT_SERVER_PORT);

console.log('Server running at port: ' + DEFAULT_SERVER_PORT);
